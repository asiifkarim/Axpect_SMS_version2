{
  "merge_metadata": {
    "description": "Merge plan for integrating external repository",
    "created_date": "2024-01-01",
    "external_repo": "path/to/external/repo",
    "merge_type": "django_app_integration",
    "estimated_time": "30-60 minutes",
    "risk_level": "medium"
  },
  
  "pre_merge_checks": [
    {
      "check": "backup_created",
      "description": "Full system backup created"
    },
    {
      "check": "dependencies_analyzed",
      "description": "Dependency conflicts identified and resolved"
    },
    {
      "check": "tests_passing",
      "description": "All current tests are passing"
    },
    {
      "check": "health_check_passed",
      "description": "System health check passed"
    }
  ],
  
  "merge_steps": [
    {
      "step": 1,
      "type": "copy_app",
      "description": "Copy Django app from external repository",
      "source": "../external_repo/app_name",
      "target": "new_app_name",
      "notes": "Rename if conflicts exist"
    },
    {
      "step": 2,
      "type": "merge_requirements",
      "description": "Merge requirements.txt files",
      "source": "../external_repo/requirements.txt",
      "conflict_resolution": "manual_review_required"
    },
    {
      "step": 3,
      "type": "update_settings",
      "description": "Add new apps to Django settings",
      "new_apps": ["new_app_name"],
      "additional_settings": {
        "middleware": [],
        "installed_apps_position": "after_custom_apps"
      }
    },
    {
      "step": 4,
      "type": "handle_migrations",
      "description": "Handle database migrations",
      "actions": [
        "makemigrations",
        "migrate --dry-run",
        "migrate"
      ]
    },
    {
      "step": 5,
      "type": "merge_urls",
      "description": "Integrate URL patterns",
      "target_file": "axpect_tech_config/urls.py",
      "url_pattern": "path('new_feature/', include('new_app_name.urls'))"
    },
    {
      "step": 6,
      "type": "merge_static_files",
      "description": "Merge static files and templates",
      "source_static": "../external_repo/static",
      "source_templates": "../external_repo/templates",
      "conflict_resolution": "namespace_with_app_name"
    }
  ],
  
  "post_merge_validation": [
    {
      "test": "run_django_tests",
      "description": "Run all Django tests",
      "timeout": 300,
      "required": true
    },
    {
      "test": "health_check",
      "description": "System health check",
      "timeout": 60,
      "required": true
    },
    {
      "test": "ai_chatbot_test",
      "description": "Test AI chatbot functionality",
      "endpoint": "/api/chatbot/",
      "test_message": "test integration",
      "required": true
    },
    {
      "test": "api_endpoints",
      "description": "Test API endpoints",
      "endpoints": ["/api/", "/health/", "/metrics/"],
      "required": true
    },
    {
      "test": "performance_test",
      "description": "Basic performance test",
      "command": "python manage.py performance_test --requests 50 --concurrent 5",
      "required": false
    }
  ],
  
  "rollback_plan": {
    "triggers": [
      "tests_failing",
      "health_check_failed",
      "critical_errors",
      "performance_degradation"
    ],
    "steps": [
      {
        "action": "restore_from_backup",
        "description": "Restore codebase from pre-merge backup"
      },
      {
        "action": "restore_database",
        "description": "Restore database from backup if needed"
      },
      {
        "action": "restart_services",
        "description": "Restart application services"
      },
      {
        "action": "verify_rollback",
        "description": "Verify system is back to original state"
      }
    ]
  },
  
  "conflict_resolution": {
    "file_conflicts": {
      "strategy": "rename_with_suffix",
      "suffix": "_external"
    },
    "model_conflicts": {
      "strategy": "rename_models",
      "prefix": "External"
    },
    "url_conflicts": {
      "strategy": "namespace_urls",
      "namespace": "external"
    },
    "dependency_conflicts": {
      "strategy": "use_latest_compatible",
      "critical_packages": ["Django", "djangorestframework"]
    }
  },
  
  "integration_points": {
    "authentication": {
      "use_existing": true,
      "custom_user_model": "main_app.CustomUser"
    },
    "database": {
      "use_existing": true,
      "foreign_keys": "review_required"
    },
    "caching": {
      "use_existing_redis": true,
      "cache_keys": "namespace_with_app_name"
    },
    "celery_tasks": {
      "integrate_with_existing": true,
      "queue_assignment": "background"
    },
    "ai_chatbot": {
      "extend_functionality": true,
      "new_actions": "review_required"
    }
  },
  
  "monitoring": {
    "during_merge": [
      "system_resources",
      "error_logs",
      "performance_metrics"
    ],
    "post_merge": [
      "grafana_dashboards",
      "sentry_errors",
      "health_endpoints",
      "ai_chatbot_performance"
    ]
  },
  
  "documentation_updates": [
    {
      "file": "PRODUCTION_DEPLOYMENT_GUIDE.md",
      "section": "New Features",
      "description": "Document new functionality"
    },
    {
      "file": "API_DOCUMENTATION.md",
      "section": "Endpoints",
      "description": "Document new API endpoints"
    },
    {
      "file": "README.md",
      "section": "Features",
      "description": "Update feature list"
    }
  ],
  
  "success_criteria": {
    "technical": [
      "all_tests_passing",
      "health_checks_green",
      "no_critical_errors",
      "performance_maintained"
    ],
    "functional": [
      "existing_features_working",
      "new_features_accessible",
      "ai_chatbot_functional",
      "user_authentication_working"
    ],
    "operational": [
      "monitoring_active",
      "logging_functional",
      "backup_systems_working",
      "deployment_successful"
    ]
  }
}

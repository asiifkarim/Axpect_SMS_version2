# Generated by Django 4.2.25 on 2025-10-20 18:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('group_type', models.CharField(choices=[('DEPARTMENT', 'Department Group'), ('CUSTOM', 'Custom Group'), ('DIRECT', 'Direct Message')], max_length=15)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_file_sharing', models.BooleanField(default=True)),
                ('max_members', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChatGroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('MEMBER', 'Member'), ('ADMIN', 'Admin'), ('MODERATOR', 'Moderator')], default='MEMBER', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_muted', models.BooleanField(default=False)),
                ('muted_until', models.DateTimeField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('TEXT', 'Text Message'), ('IMAGE', 'Image'), ('FILE', 'File'), ('DRIVE_FILE', 'Google Drive File'), ('SYSTEM', 'System Message')], default='TEXT', max_length=15)),
                ('content', models.TextField(blank=True)),
                ('file_attachment', models.FileField(blank=True, null=True, upload_to='chat_files/')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('drive_file_id', models.CharField(blank=True, max_length=100)),
                ('drive_file_name', models.CharField(blank=True, max_length=255)),
                ('drive_file_url', models.URLField(blank=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessageDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read')], default='SENT', max_length=10)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessageReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('LIKE', 'üëç'), ('LOVE', '‚ù§Ô∏è'), ('LAUGH', 'üòÇ'), ('WOW', 'üòÆ'), ('SAD', 'üò¢'), ('ANGRY', 'üò†')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeLocationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_start', models.DateTimeField()),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('start_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('start_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('end_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('end_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('total_distance', models.FloatField(default=0.0)),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('avg_speed', models.FloatField(blank=True, null=True)),
                ('location_points_count', models.PositiveIntegerField(default=0)),
                ('primary_activity', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-session_start'],
            },
        ),
        migrations.CreateModel(
            name='GoogleDriveFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_file_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('mime_type', models.CharField(max_length=100)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('web_view_link', models.URLField()),
                ('web_content_link', models.URLField(blank=True)),
                ('thumbnail_link', models.URLField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('can_share', models.BooleanField(default=True)),
                ('cached_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('access_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='GoogleDriveIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('token_expires_at', models.DateTimeField()),
                ('google_email', models.EmailField(max_length=254)),
                ('google_name', models.CharField(max_length=200)),
                ('google_id', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_sync', models.BooleanField(default=False)),
                ('allowed_file_types', models.JSONField(default=list)),
                ('max_file_size_mb', models.IntegerField(default=100)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_error_count', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GPSGeofence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('center_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('radius_meters', models.PositiveIntegerField(default=100)),
                ('polygon_coordinates', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_attendance', models.BooleanField(default=True)),
                ('require_photo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GPSLocationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('activity_type', models.CharField(blank=True, max_length=50)),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('network_type', models.CharField(blank=True, max_length=20)),
                ('recorded_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('MESSAGE_SENT', 'Message Sent'), ('MESSAGE_DELETED', 'Message Deleted'), ('GROUP_CREATED', 'Group Created'), ('GROUP_JOINED', 'Joined Group'), ('GROUP_LEFT', 'Left Group'), ('DRIVE_CONNECTED', 'Drive Connected'), ('DRIVE_DISCONNECTED', 'Drive Disconnected'), ('FILE_SHARED', 'File Shared'), ('ADMIN_ACTION', 'Admin Action')], max_length=20)),
                ('details', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desktop_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=False)),
                ('sound_notifications', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('weekend_notifications', models.BooleanField(default=True)),
                ('mute_all_groups', models.BooleanField(default=False)),
                ('only_mentions', models.BooleanField(default=False)),
                ('drive_share_notifications', models.BooleanField(default=True)),
                ('drive_sync_notifications', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='employeegpsattendance',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='employeegpsattendance',
            name='employee',
        ),
        migrations.AlterModelOptions(
            name='aiprocessinglog',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='businesscalendar',
            options={'ordering': ['date']},
        ),
        migrations.AlterModelOptions(
            name='cityweekdayplan',
            options={'ordering': ['city', 'weekday']},
        ),
        migrations.AlterModelOptions(
            name='communicationlog',
            options={'ordering': ['-timestamp']},
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['name']},
        ),
        migrations.RenameIndex(
            model_name='jobcard',
            new_name='main_app_jo_assigne_56ad09_idx',
            old_name='main_app_jo_created_a141b3_idx',
        ),
        migrations.RenameIndex(
            model_name='jobcard',
            new_name='main_app_jo_due_dat_dbbe67_idx',
            old_name='main_app_jo_due_at_9bea7f_idx',
        ),
        migrations.RemoveField(
            model_name='cityweekdayplan',
            name='staff',
        ),
        migrations.RemoveField(
            model_name='cityweekdayplan',
            name='team',
        ),
        migrations.AddField(
            model_name='aiprocessinglog',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aiprocessinglog',
            name='processing_method',
            field=models.CharField(default='llm', max_length=50),
        ),
        migrations.AddField(
            model_name='attendance',
            name='end_gps',
            field=models.CharField(blank=True, help_text='Check-out GPS coordinates (lat,lon)', max_length=100),
        ),
        migrations.AddField(
            model_name='attendance',
            name='end_ts',
            field=models.DateTimeField(blank=True, help_text='Check-out timestamp', null=True),
        ),
        migrations.AddField(
            model_name='attendance',
            name='start_gps',
            field=models.CharField(blank=True, help_text='Check-in GPS coordinates (lat,lon)', max_length=100),
        ),
        migrations.AddField(
            model_name='attendance',
            name='start_ts',
            field=models.DateTimeField(blank=True, help_text='Check-in timestamp', null=True),
        ),
        migrations.AddField(
            model_name='attendance',
            name='working_city',
            field=models.ForeignKey(blank=True, help_text='City where employee is working', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.city'),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='applies_to_all',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.city'),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='date',
            field=models.DateField(default=django.utils.timezone.now, unique=True),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='holiday_name',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='is_holiday',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='is_working_day',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='businesscalendar',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='cityweekdayplan',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='cityweekdayplan',
            name='end_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cityweekdayplan',
            name='is_working_day',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='cityweekdayplan',
            name='start_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cityweekdayplan',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='read_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notificationemployee',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notificationemployee',
            name='read_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notificationmanager',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notificationmanager',
            name='read_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='aiprocessinglog',
            name='confidence_score',
            field=models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='aiprocessinglog',
            name='jobcard_action',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.jobcardaction'),
        ),
        migrations.AlterField(
            model_name='aiprocessinglog',
            name='status',
            field=models.CharField(choices=[('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('PENDING', 'Pending')], default='PENDING', max_length=20),
        ),
        migrations.AlterField(
            model_name='cityweekdayplan',
            name='weekday',
            field=models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')]),
        ),
        migrations.AlterField(
            model_name='jobcard',
            name='assigned_by',
            field=models.ForeignKey(blank=True, help_text='User who created this job card', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='jobcard',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Employee assigned to this job card', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.employee'),
        ),
        migrations.AlterField(
            model_name='jobcard',
            name='created_date',
            field=models.DateTimeField(auto_now_add=True, help_text='When this job card was created'),
        ),
        migrations.AlterField(
            model_name='jobcard',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Description of the job card task'),
        ),
        migrations.AlterField(
            model_name='jobcard',
            name='due_date',
            field=models.DateTimeField(blank=True, help_text='When this job card is due', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='businesscalendar',
            unique_together={('date', 'city')},
        ),
        migrations.AddIndex(
            model_name='aiprocessinglog',
            index=models.Index(fields=['status', 'created_at'], name='main_app_ai_status_20832e_idx'),
        ),
        migrations.AddIndex(
            model_name='aiprocessinglog',
            index=models.Index(fields=['jobcard_action', 'status'], name='main_app_ai_jobcard_e35322_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationlog',
            index=models.Index(fields=['customer', 'timestamp'], name='main_app_co_custome_cf9fa7_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationlog',
            index=models.Index(fields=['user', 'timestamp'], name='main_app_co_user_id_fc6912_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationlog',
            index=models.Index(fields=['channel', 'direction'], name='main_app_co_channel_26b02c_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationlog',
            index=models.Index(fields=['timestamp'], name='main_app_co_timesta_3d568b_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['active'], name='main_app_cu_active_7e259f_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['owner_staff'], name='main_app_cu_owner_s_522961_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['city', 'active'], name='main_app_cu_city_id_ab8ce9_idx'),
        ),
        migrations.AddIndex(
            model_name='jobcard',
            index=models.Index(fields=['type', 'status'], name='main_app_jo_type_e8713a_idx'),
        ),
        migrations.AddIndex(
            model_name='jobcard',
            index=models.Index(fields=['customer', 'status'], name='main_app_jo_custome_3f44ca_idx'),
        ),
        migrations.AddIndex(
            model_name='jobcard',
            index=models.Index(fields=['created_date', 'status'], name='main_app_jo_created_b06637_idx'),
        ),
        migrations.DeleteModel(
            name='EmployeeGPSAttendance',
        ),
        migrations.AddField(
            model_name='socialnotificationsettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_notification_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='socialauditlog',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.chatgroup'),
        ),
        migrations.AddField(
            model_name='socialauditlog',
            name='message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.chatmessage'),
        ),
        migrations.AddField(
            model_name='socialauditlog',
            name='target_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_audit_targets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='socialauditlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gpslocationhistory',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gpslocationhistory',
            name='geofence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.gpsgeofence'),
        ),
        migrations.AddField(
            model_name='gpslocationhistory',
            name='jobcard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.jobcard'),
        ),
        migrations.AddField(
            model_name='gpsgeofence',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.city'),
        ),
        migrations.AddField(
            model_name='gpsgeofence',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.customer'),
        ),
        migrations.AddField(
            model_name='googledriveintegration',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='drive_integration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='googledrivefile',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cached_files', to='main_app.googledriveintegration'),
        ),
        migrations.AddField(
            model_name='employeelocationsession',
            name='customers_visited',
            field=models.ManyToManyField(blank=True, to='main_app.customer'),
        ),
        migrations.AddField(
            model_name='employeelocationsession',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeelocationsession',
            name='jobcards_visited',
            field=models.ManyToManyField(blank=True, to='main_app.jobcard'),
        ),
        migrations.AddField(
            model_name='chatmessagereaction',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='main_app.chatmessage'),
        ),
        migrations.AddField(
            model_name='chatmessagereaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chatmessagedelivery',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_status', to='main_app.chatmessage'),
        ),
        migrations.AddField(
            model_name='chatmessagedelivery',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_deliveries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='main_app.chatgroup'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='main_app.chatmessage'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chatgroupmember',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='main_app.chatgroup'),
        ),
        migrations.AddField(
            model_name='chatgroupmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chatgroup',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chatgroup',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.department'),
        ),
        migrations.RemoveField(
            model_name='businesscalendar',
            name='event_date',
        ),
        migrations.RemoveField(
            model_name='businesscalendar',
            name='item',
        ),
        migrations.RemoveField(
            model_name='businesscalendar',
            name='lead_days',
        ),
        migrations.RemoveField(
            model_name='businesscalendar',
            name='title',
        ),
        migrations.AddIndex(
            model_name='socialauditlog',
            index=models.Index(fields=['user', 'action', 'created_at'], name='main_app_so_user_id_532138_idx'),
        ),
        migrations.AddIndex(
            model_name='socialauditlog',
            index=models.Index(fields=['action', 'created_at'], name='main_app_so_action_238ff5_idx'),
        ),
        migrations.AddIndex(
            model_name='gpslocationhistory',
            index=models.Index(fields=['employee', 'recorded_at'], name='main_app_gp_employe_e6579b_idx'),
        ),
        migrations.AddIndex(
            model_name='gpslocationhistory',
            index=models.Index(fields=['jobcard', 'recorded_at'], name='main_app_gp_jobcard_64156f_idx'),
        ),
        migrations.AddIndex(
            model_name='googledriveintegration',
            index=models.Index(fields=['user', 'is_active'], name='main_app_go_user_id_808788_idx'),
        ),
        migrations.AddIndex(
            model_name='googledriveintegration',
            index=models.Index(fields=['google_email'], name='main_app_go_google__5296b6_idx'),
        ),
        migrations.AddIndex(
            model_name='googledrivefile',
            index=models.Index(fields=['integration', 'mime_type'], name='main_app_go_integra_d53250_idx'),
        ),
        migrations.AddIndex(
            model_name='googledrivefile',
            index=models.Index(fields=['drive_file_id'], name='main_app_go_drive_f_31c131_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessagereaction',
            index=models.Index(fields=['message', 'reaction_type'], name='main_app_ch_message_efeeed_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatmessagereaction',
            unique_together={('message', 'user', 'reaction_type')},
        ),
        migrations.AddIndex(
            model_name='chatmessagedelivery',
            index=models.Index(fields=['message', 'status'], name='main_app_ch_message_f6a353_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessagedelivery',
            index=models.Index(fields=['user', 'status'], name='main_app_ch_user_id_74c201_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatmessagedelivery',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['group', 'created_at'], name='main_app_ch_group_i_586594_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender', 'created_at'], name='main_app_ch_sender__59fd77_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='main_app_ch_message_8aa2fe_idx'),
        ),
        migrations.AddIndex(
            model_name='chatgroupmember',
            index=models.Index(fields=['user', 'is_active'], name='main_app_ch_user_id_7fee03_idx'),
        ),
        migrations.AddIndex(
            model_name='chatgroupmember',
            index=models.Index(fields=['group', 'is_active'], name='main_app_ch_group_i_785d2c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatgroupmember',
            unique_together={('group', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatgroup',
            index=models.Index(fields=['group_type', 'is_active'], name='main_app_ch_group_t_e16234_idx'),
        ),
        migrations.AddIndex(
            model_name='chatgroup',
            index=models.Index(fields=['department'], name='main_app_ch_departm_18aba1_idx'),
        ),
    ]
